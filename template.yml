AWSTemplateFormatVersion: 2010-09-09
Description: >-
  sam-dynamo-db-example

Transform:
  - AWS::Serverless-2016-10-31

Globals:
  Function:
    CodeUri: .aws-sam/build
    Runtime: nodejs12.x
    MemorySize: 128
    Timeout: 100
    Environment:
      Variables:
        DYNAMODB_ENDPOINT: 'http://dynamodb:8000'
        DYNAMODB_TABLE: !Ref SampleTable

Resources:
  getAllItemsFunction:
    Type: AWS::Serverless::Function
    Properties:
      Handler: getAllItemsFunction/app.getAll
      Description: A simple example includes a HTTP get method to get all items from a DynamoDB table.
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !Ref SampleTable
      Environment:
        Variables:
          # Make table name accessible as environment variable from function code during execution
          SAMPLE_TABLE: !Ref SampleTable
      Events:
        Api:
          Type: Api
          Properties:
            Path: /
            Method: GET

  getByIdFunction:
    Type: AWS::Serverless::Function
    Properties:
      Handler: getByIdFunction/app.getById
      Description: A simple example includes a HTTP get method to get one item by id from a DynamoDB table.
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !Ref SampleTable
      Environment:
        Variables:
          SAMPLE_TABLE: !Ref SampleTable
      Events:
        Api:
          Type: Api
          Properties:
            Path: /{id}
            Method: GET

  updateByIdFunction:
    Type: AWS::Serverless::Function
    Properties:
      Handler: updateByIdFunction/app.updateById
      Description: A simple example includes a HTTP post method to add one item to a DynamoDB table.
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !Ref SampleTable
      Environment:
        Variables:
          SAMPLE_TABLE: !Ref SampleTable
      Events:
        Api:
          Type: Api
          Properties:
            Path: /{id}
            Method: PUT

  deleteByIdFunction:
    Type: AWS::Serverless::Function
    Properties:
      Handler: deleteByIdFunction/app.getAll
      Description: A simple example includes a HTTP post method to add one item to a DynamoDB table.
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !Ref SampleTable
      Environment:
        Variables:
          SAMPLE_TABLE: !Ref SampleTable
      Events:
        Api:
          Type: Api
          Properties:
            Path: /{id}
            Method: DELETE

  postItemFunction:
    Type: AWS::Serverless::Function
    Properties:
      Handler: postItemFunction/app.postItem
      Description: A simple example includes a HTTP post method to add one item to a DynamoDB table.
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !Ref SampleTable
      Environment:
        Variables:
          SAMPLE_TABLE: !Ref SampleTable
      Events:
        Api:
          Type: Api
          Properties:
            Path: /
            Method: POST

  SampleTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: 'SampleTable'
      AttributeDefinitions:
        - AttributeName: 'id'
          AttributeType: 'S'
      KeySchema:
        - AttributeName: 'id'
          KeyType: 'HASH'
      ProvisionedThroughput:
        ReadCapacityUnits: 2
        WriteCapacityUnits: 2
      # GlobalSecondaryIndexes:
      #   - IndexName: id-name-index
      #     KeySchema:
      #       - AttributeName: id
      #         KeyType: HASH
      #       - AttributeName: name
      #         KeyType: RANGE
      #     Projection:
      #       ProjectionType: ALL
      #     ProvisionedThroughput:
      #       ReadCapacityUnits: 5
      #       WriteCapacityUnits: 5

Outputs:
  WebEndpoint:
    Description: 'API Gateway endpoint URL for Prod stage'
    Value: !Sub 'https://${ServerlessRestApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/'
